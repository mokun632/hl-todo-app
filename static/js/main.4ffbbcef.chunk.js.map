{"version":3,"sources":["domain/service/validation.ts","store/alert/action.ts","components/Alert.tsx","dnd/entity/ItemTypes.ts","components/DraggableTodoCard.tsx","store/todo_card/action.ts","dnd/service/dndHandlers.ts","components/TodoCard.tsx","components/InpuTodo.tsx","components/Chart.tsx","components/Todo.tsx","components/App.tsx","store/alert/reducer.ts","store/todo_card/reducer.ts","store/store.ts","index.tsx"],"names":["uaCheck","navigator","userAgent","match","emptyMessage","tooLongMessage","maxQtyMessage","isTooLong","str","maxLen","trim","length","actionCraeter","actionCreaterFactory","alertActions","openAlert","closeAlert","Alert","alert","useSelector","state","dispatch","useDispatch","Snackbar","open","onClose","elevation","variant","severity","message","ItemTypes","DraggableTodoCard","id","moveCard","findCard","children","originalIndex","index","useDrag","item","type","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","ref","node","style","cursor","todoCardActions","setTodoCardTitle","addTodoCardList","setTodoText","addTodo","setDoneFlg","sortTodoCardList","deleteTodoCard","deleteTodo","findCardHandler","_card","card","todoCardList","filter","c","indexOf","TodoCardsWrapper","styled","div","TodoMainTitle","DeleteTodoCardButton","button","TodoCards","TodoMain","TodoCheckBoxWrapper","DeleteTodoButton","DeleteIcon","TodoCheckBoxLabel","label","TodoText","TextField","checkMaxLen","TodoCard","todoCard","atIndex","moveCardHandler","belowWidth","useMediaQuery","map","ItodoCard","todoCardIndex","title","onClick","_","fontSize","todos","todo","i","onChange","doneFlg","checked","todoText","size","value","provTodoText","e","target","onKeyPress","key","onBlur","InputTodoWrapper","InputTodoCardTitle","input","InputTodoButton","isIME","InputTodo","addTodoCard","provTitle","array","maxQty","isMaxCardQty","onCompositionStart","onCompositionEnd","onKeyDown","ChartWrapper","COLORS","Chart","barData","preData","name","completed","Math","floor","t","uncompleted","notMuch","Array","createBarData","todoRateData","doneFlgCount","flat","totalDoneFlgCount","doneFlgRate","otherDoneRate","n","uv","fill","createTodoRateData","BarChart","width","height","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Bar","stackId","RadialBarChart","cx","cy","innerRadius","outerRadius","barSize","RadialBar","position","background","iconSize","layout","verticalAlign","align","Todo","cardIndex","todoIndex","HeaderWrapper","header","HeaderLogo","h1","App","DndProvider","backend","TouchBackend","HTML5Backend","alertReducer","reducerWithInitialState","case","_state","payload","todoCardReducer","update","$splice","store","createStore","combineReducers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","GlobalStyle","createGlobalStyle","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ffbbcef.chunk.js","sourcesContent":["import { TodoCard } from \"../entity/todoCard\";\n\nexport const uaCheck: boolean = !!(navigator.userAgent.match(/iPhone|Android.+Mobile/));\n\nexport const maxLen: number = 12;\n\nexport const spMaxLen: number = 10;\n\nexport const maxQty: number = 10;\n\nexport const emptyMessage: string = \"タイトルを入力して下さい\";\n\nexport const tooLongMessage: string = `${uaCheck ? spMaxLen : maxLen}文字以下で入力して下さい`;\n\nexport const maxQtyMessage: string = `カードは${maxQty}枚以上は、作れません`;\n\nexport const isEmpty = (str: string): boolean => !str.trim();\n\nexport const isTooLong = (str: string, maxLen: number): boolean => str.trim().length > maxLen;\n\nexport const isMaxCardQty = (array: TodoCard[\"todoCardList\"], maxQty: number): boolean => array.length > maxQty;\n","import actionCreaterFactory from \"typescript-fsa\";\nimport { Alert } from \"../../domain/entity/alert\";\n\nconst actionCraeter = actionCreaterFactory();\n\nexport type AlertPayload = Omit<Alert, \"open\">;\n\nconst alertActions = {\n  openAlert: actionCraeter<AlertPayload>(\"OPEN_ALERT\"),\n  closeAlert: actionCraeter<{}>(\"CLOSE_ALERT\")\n};\n\nexport default alertActions;\n","import React, { FC } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { RootState } from \"../domain/entity/rootState\"\nimport alertActions from \"../store/alert/action\";\n\nconst Alert: FC = () => {\n  const alert = useSelector((state: RootState) => state.alert);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(alertActions.closeAlert({}));\n  }\n\n  return (\n    <Snackbar open={alert.open} onClose={handleClose}>\n      <MuiAlert elevation={6} variant=\"filled\" severity={alert.severity}>\n        {alert.message}\n      </MuiAlert>\n    </Snackbar>\n  )\n}\n\nexport default Alert;\n","export const ItemTypes = {\n  CARD: \"card\",\n  TODO: \"todo\"\n}\ntype ItemType = keyof typeof ItemTypes;\n\nexport type Item = {\n  index: number;\n  id: number;\n  type: ItemType;\n};\n","import { FC } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../dnd/entity/ItemTypes\";\nimport { Card, Todo } from \"../domain/entity/todoCard\";\n\ntype Props = {\n  id: string,\n  card: Card | Todo,\n  moveCard: (id: string, to: number) => void,\n  findCard: (id: string) => { index: number },\n}\n\ninterface Item {\n  id: string\n  type: string\n  originalIndex: string\n}\n\nconst DraggableTodoCard: FC<Props> = ({\n  id, moveCard, findCard, children\n}) => {\n\n  const originalIndex = findCard(id).index\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, originalIndex },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const { id: droppedId, originalIndex } = monitor.getItem()\n      const didDrop = monitor.didDrop()\n      if (!didDrop) {\n        moveCard(droppedId, originalIndex)\n      }\n    },\n  });\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    canDrop: () => false,\n    hover({ id: draggedId }: Item) {\n      if (draggedId !== id) {\n        const { index: overIndex } = findCard(id)\n        moveCard(draggedId, overIndex)\n      }\n    },\n  })\n\n  const opacity = isDragging ? 0.1 : 1\n  return (\n    <div ref={(node) => drag(drop(node))} style={{cursor: 'move', opacity}}>\n      {children}\n    </div>\n  )\n\n}\n\nexport default DraggableTodoCard;\n","import actionCreaterFactory from \"typescript-fsa\";\nimport { Card } from \"../../domain/entity/todoCard\";\n\nconst actionCraeter = actionCreaterFactory();\n\nconst todoCardActions = {\n  setTodoCardTitle: actionCraeter<string>(\"SET_TODO_CARD_TITLE\"),\n  addTodoCardList: actionCraeter<string>(\"ADD_TODO_CARD_LIST\"),\n  setTodoText: actionCraeter<{provTodoText: string, index: number}>(\"SET_TODO_TEXT\"),\n  addTodo: actionCraeter<{provTodoText: string, doneFlg: boolean, index: number}>(\"ADD_TODOS\"),\n  setDoneFlg: actionCraeter<{doneFlg: boolean, cardIndex: number, index: number}>(\"SET_DONE_FLG\"),\n  sortTodoCardList: actionCraeter<{card: Card, index: number, atIndex: number}>(\"SORT_TODO_CARD_LIST\"),\n  deleteTodoCard: actionCraeter<{cardIndex: number}>(\"DELETE_TODO_CARD\"),\n  deleteTodo: actionCraeter<{cardIndex: number, todoIndex: number}>(\"DELETE_TODO\"),\n};\n\nexport default todoCardActions;\n","import { TodoCard } from \"../../domain/entity/todoCard\";\nimport todoCardActions from \"../../store/todo_card/action\";\n\nexport const moveCardHandler = (id: string, atIndex: number, _card: TodoCard) => {\n  const { card, index } = findCardHandler(id, _card)\n  return todoCardActions.sortTodoCardList({card, index, atIndex});\n}\n\nexport const findCardHandler = (id: string, _card: TodoCard) => {\n  const card = _card.todoCardList.filter((c) => `${c.id}` === id)[0]\n  return {\n    card,\n    index: _card.todoCardList.indexOf(card),\n  }\n};\n","import { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { TextField, useMediaQuery } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { AlertSeverity } from '../domain/entity/alert';\nimport { RootState } from '../domain/entity/rootState';\nimport { isTooLong, maxLen, spMaxLen, tooLongMessage, uaCheck } from '../domain/service/validation';\nimport DraggableTodoCard from './DraggableTodoCard';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../dnd/entity/ItemTypes';\nimport { moveCardHandler, findCardHandler } from '../dnd/service/dndHandlers';\n\nconst TodoCardsWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 300px 1fr;\n  grid-template-columns: 240px 240px 240px 240px 240px;\n  grid-gap: 16px;\n  align-items: center;\n  justify-content: center;\n  margin: 0 70px;\n\n  @media (max-width: 500px) {\n    grid-template-rows: 180px 180px 180px 180px 180px;\n    grid-template-columns: 130px 130px;\n    grid-gap: 8px;\n    margin: 0 30px;\n  }\n  ::before {\n    transition: all 1.5s;\n    opacity: 1;\n  }\n`;\n\nconst TodoMainTitle = styled.div`\n  position: absolute;\n  height: 20px;\n  width: 90%;\n  top: 1px;\n  font-size: 15px;\n  text-align: center;\n  white-space:　nowrap;\n  overflow: scroll;\n\n  @media (max-width: 500px) {\n    font-size: 10px;\n  }\n`;\n\nconst DeleteTodoCardButton = styled.button`\n  position: absolute;\n  top: -10px;\n  right: -5px;\n  transition: 0.1s;\n  background: #ebebeb;\n  border: 1px solid #33322E;\n  box-sizing: border-box;\n  font-size: 5px;\n  border-radius: 17px;\n  box-shadow: 1px 1px 0px;\n  outline: none;\n  overflow: visible;\n\n  @media (max-width: 500px) {\n    top: -13px;\n    right: -10px;\n  }\n  :active {\n    transform: translate(1px, 1px);\n    box-shadow: none;\n  };\n`;\n\nconst TodoCards = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 220px;\n  height: 300px;\n  margin-top: 15px;\n  border: 4px solid #33322E;\n  box-sizing: border-box;\n  box-shadow: 12px 12px 0px #33322E;\n  background: #F9F3E5;\n  border-radius: 24px;\n\n  @media (max-width: 500px) {\n    width: 130px;\n    height: 180px;\n    margin-top: 2px;\n  }\n`;\n\nconst TodoMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 80%;\n  width: 100%;\n  border-top: 1.5px solid #33322E;\n  box-sizing: border-box;\n`;\n\nconst TodoCheckBoxWrapper = styled.div`\n  position: relative;\n  display: table-cell;\n  margin: 8px 0;\n  white-space: nowrap;\n  label {\n    overflow: scroll;\n  }\n\n  @media (max-width: 500px) {\n    margin: 0;\n  }\n`;\n\nconst DeleteTodoButton = styled(DeleteIcon)`\n  position: absolute;\n  top: -1px;\n  right: 0px;\n  transition: 0.1s;\n\n  @media (max-width: 500px) {\n    top: 4px;\n    right: -3px;\n  }\n\n  :active {\n    transform: translate(1px, 1px);\n    box-shadow: none;\n  };\n`;\n\nconst TodoCheckBoxLabel = styled.label`\n  width: 100%;\n\n  @media (max-width: 500px) {\n    font-size: 10px;\n  }\n`;\n\nconst TodoText = styled(TextField)`\n  margin: 0;\n  width: 100%;\n`;\n\ntype Props = {\n  addTodo: (provTodoText: string, doneFlg: boolean, index: number) => void;\n  setTodoText: (provTodoText: string, index: number) => void;\n  setDoneFlg: (doneFlg: boolean, cardIndex: number, index: number) => void;\n  openAlert: (severity: AlertSeverity, message: string) => void;\n  deleteTodoCard: (cardIndex: number) => void;\n  deleteTodo: (cardIndex: number, todoIndex: number) => void;\n}\n\nconst checkMaxLen = uaCheck ? spMaxLen : maxLen;\n\nexport const TodoCard: FC<Props> = (\n  {\n    addTodo = () => undefined,\n    setTodoText = () => undefined,\n    setDoneFlg = () => undefined,\n    openAlert = () => undefined,\n    deleteTodoCard = () => undefined,\n    deleteTodo = () => undefined,\n  }\n) => {\n  const todoCard = useSelector((state: RootState) => state.todoCard);\n  const dispatch = useDispatch();\n  const moveCard = (id: string, atIndex: number) => { dispatch(moveCardHandler(id, atIndex, todoCard )) };\n  const findCard = (id: string) => { \n    const card = findCardHandler(id, todoCard);\n    return { index: card.index }\n  };\n  const belowWidth = useMediaQuery('(max-width: 500px)')\n\n  const [, drop] = useDrop({ accept: ItemTypes.CARD })\n\n  return (\n    <TodoCardsWrapper ref={drop}>\n      {todoCard.todoCardList.length > 0 && \n      (\n        todoCard.todoCardList.map((ItodoCard, todoCardIndex) => (\n        <DraggableTodoCard key={todoCardIndex} id={`${ItodoCard.id}`} card={ItodoCard} moveCard={moveCard} findCard={findCard}>\n          <TodoCards>\n           <TodoMainTitle >\n             {ItodoCard.title}\n           </TodoMainTitle>\n           <DeleteTodoCardButton onClick={_ => deleteTodoCard(todoCardIndex)}>\n              <DeleteIcon style={belowWidth ? {fontSize: 14} : {fontSize: 20}} />\n           </DeleteTodoCardButton>\n            <TodoMain>\n             {ItodoCard.todos.map((todo, i) => (\n               <TodoCheckBoxWrapper key={i}>\n                 <input \n                   type=\"checkbox\"\n                   onChange={_ => setDoneFlg( todo.doneFlg? false : true, todoCardIndex, i)}\n                   checked={todo.doneFlg}\n                 />\n                 <TodoCheckBoxLabel>\n                   {todo.doneFlg? \n                   <del>\n                     {todo.todoText}\n                   </del>\n                   :\n                   todo.todoText}\n                 </TodoCheckBoxLabel>\n                 <DeleteTodoButton style={belowWidth ? {fontSize: 17} : {fontSize: 20}} onClick={_ => deleteTodo(todoCardIndex, i)} />\n               </TodoCheckBoxWrapper>\n               )\n              )\n             }\n             {\n               ItodoCard.todos.length < 6 &&\n               (  \n                 <TodoCheckBoxWrapper>\n                   <TodoText\n                     size=\"medium\"\n                     value={todoCard.todoCardList[todoCardIndex].provTodoText}\n                     onChange={e => {\n                       isTooLong(e.target.value, checkMaxLen)?\n                       openAlert(\"error\", tooLongMessage)\n                       :\n                       setTodoText(e.target.value, todoCardIndex)\n                     }}\n                     onKeyPress={e => {\n                       e.key === \"Enter\" && \n                       !!todoCard.todoCardList[todoCardIndex].provTodoText &&\n                       addTodo(todoCard.todoCardList[todoCardIndex].provTodoText, false, todoCardIndex)\n                     }} \n                     onBlur={_ => {\n                       !!todoCard.todoCardList[todoCardIndex].provTodoText && \n                       addTodo(todoCard.todoCardList[todoCardIndex].provTodoText, false, todoCardIndex)\n                     }}\n                   />\n                 </TodoCheckBoxWrapper>\n               )\n             }\n            </TodoMain>\n          </TodoCards>\n        </DraggableTodoCard>\n       ))\n      )\n      }\n    </TodoCardsWrapper>\n  )\n};\n","import { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { AlertSeverity } from '../domain/entity/alert';\nimport { RootState } from '../domain/entity/rootState';\nimport { TodoCard } from '../domain/entity/todoCard';\nimport { emptyMessage, isEmpty, isTooLong, maxLen, tooLongMessage, isMaxCardQty, maxQty, maxQtyMessage, uaCheck, spMaxLen } from '../domain/service/validation';\n\nconst InputTodoWrapper = styled.div`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  height: 30px;\n\n  @media (max-width: 500px) {\n    margin-top: 80px;\n  }\n`;\n\nconst InputTodoCardTitle = styled.input`\n  vertical-align: middle;\n  border: 2px solid #33322E;\n  border-radius: 4px;\n  width: 35%;\n  height: 26px;\n  outline: none;\n`;\n\nconst InputTodoButton = styled.button`\n  transition: 0.1s;\n  vertical-align: middle;\n  background: #D0F4F0;\n  border: 2px solid #33322E;\n  box-sizing: border-box;\n  font-size: 14px;\n  border-radius: 4px;\n  box-shadow: 3px 3px 0px;\n  outline: none;\n\n  :active {\n    transform: translate(1px, 1px);\n    box-shadow: none;\n  };\n`;\n\ntype Props= {\n  setTodoCardTitle: (provTitle: string) => void;\n  addTodoCardList: (provTitlele: string) => void;\n  openAlert: (severity: AlertSeverity, message: string) => void;\n}\n\nlet isIME: boolean = false;\nconst checkMaxLen = uaCheck ? spMaxLen : maxLen;\n\nexport const InputTodo: FC<Props> = (\n  {\n    setTodoCardTitle = () => undefined,\n    addTodoCardList = () => undefined,\n    openAlert = () => undefined,\n  }\n) => {\n  const todoCard = useSelector((state: RootState) => state.todoCard);\n\n  const addTodoCard = (provTitle: string, todoCardList: TodoCard[\"todoCardList\"]) => {\n    isEmpty(provTitle) ?\n    openAlert(\"error\", emptyMessage)\n    :\n    isTooLong(provTitle, maxLen) ?\n    openAlert(\"error\", emptyMessage)\n    :\n    isMaxCardQty(todoCardList, maxQty)?\n    openAlert(\"error\", maxQtyMessage)\n    :\n    addTodoCardList(provTitle)\n  };\n\n  const setTitle = (provTitle: string) => {\n    isTooLong(provTitle, checkMaxLen) ?\n    openAlert(\"error\", tooLongMessage)\n    :\n    setTodoCardTitle(provTitle);\n  };\n\n  return (\n    <>\n      <InputTodoWrapper>\n        <InputTodoCardTitle\n          value={todoCard.provTitle}\n          onCompositionStart={e => {\n            isIME = false;\n          }}\n          onCompositionEnd={e => {\n            isIME = true;\n          }}\n          onChange={e => setTitle(e.target.value)}\n          onKeyDown={e => (isIME || todoCard.provTitle.match(/^[A-Za-z0-9]*$/)) && \n                          e.key === \"Enter\" && \n                          addTodoCard(todoCard.provTitle, todoCard.todoCardList)}\n        />\n        <InputTodoButton\n          onClick={_ => addTodoCard(todoCard.provTitle, todoCard.todoCardList)}\n        >\n          Create Card\n        </InputTodoButton>\n      </InputTodoWrapper>\n    </>\n  )\n}\n","import { useMediaQuery } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, RadialBarChart, RadialBar\n} from 'recharts';\nimport styled from \"styled-components\";\nimport { RootState } from \"../domain/entity/rootState\";\nimport { TodoCard } from \"../domain/entity/todoCard\";\n\nconst ChartWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr;\n  grid-gap: 10px;\n  align-items: center;\n  justify-content: center;\n  margin: 0 70px;\n  overflow: scroll;\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n    grid-gap: 3px;\n    margin: 0 30px;\n  }\n`;\n\ntype BarChartType = { name: string, uncompleted: number, completed: number, }[];\n\ntype TodoRateType = { name: string, uv: number, fill: string }[];\n\nconst COLORS = [ '#00ffea', '#b600fe', '#00C49F', '#FFBB28', '#00a2ff', '#ff0000', '#27a700', '#fffb00', '#fe00dc', '#000294' ];\n\nconst Chart: FC = () => {\n  const todoCard = useSelector((state: RootState) => state.todoCard);\n  const belowWidth = useMediaQuery('(max-width: 500px)')\n  const createBarData = (todoCard: TodoCard) => {\n    const preData = todoCard.todoCardList.map((todo, _) => {\n      return{\n        name: todo.title,\n        completed: !todo.todos.length ? 0 : Math.floor(todo.todos.filter((t) => t.doneFlg).length / 6 * 100),\n        uncompleted: !todo.todos.length ? 0 : Math.floor(todo.todos.filter((t) => !t.doneFlg).length / 6 * 100),\n      };\n    });\n    const notMuch = 10 - preData.length;\n    return !notMuch ? preData : [...preData, ...[...Array(notMuch)].map(() => { return{ name: \"\", uncompleted: 0, completed: 0, } })]\n\n  };\n\n  let barData: BarChartType = createBarData(todoCard);\n\n  const createTodoRateData = (todoCard: TodoCard) => {\n    const doneFlgCount = todoCard.todoCardList.map((c, _) => {\n     return c.todos.filter((t, _) => t.doneFlg)\n    }\n    ).flat().length;\n    const totalDoneFlgCount = todoCard.todoCardList.map((c, _) => \n      c.todos\n    ).flat().length;\n    const doneFlgRate = Math.floor(doneFlgCount / totalDoneFlgCount * 100);\n    const otherDoneRate = \n      todoCard.todoCardList.map((c, i) => {\n      const n = Math.floor(c.todos.filter((t, _) => t.doneFlg).length / c.todos.length * 100);\n      return {\n        name: c.title,\n        uv: !n ? 0 : n,\n        fill: `${COLORS[i % COLORS.length]}`\n      }\n    })\n    return [{name: \"\", uv: 100, fill: \"#ffffff\"}, {name: \"全体完了率\", uv: !doneFlgRate ? 0 : doneFlgRate, fill: \"#00ff68\"}, ...otherDoneRate]\n  };\n\n  let todoRateData: TodoRateType = createTodoRateData(todoCard);\n\n  return (\n    <ChartWrapper>\n      <BarChart\n        width={belowWidth ? 400 : 500}\n        height={300}\n        data={barData}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis type=\"number\" domain={[0, 100]} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"completed\" stackId=\"a\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"uncompleted\" stackId=\"a\" fill=\"#8884d8\" />\n      </BarChart>\n      <RadialBarChart width={belowWidth ? 400 : 500} height={belowWidth ? 200 : 300} cx={belowWidth ? 150 : 350} cy={belowWidth ? 100 : 150} innerRadius={belowWidth ? 15 : 30} outerRadius={belowWidth ? 100 : 150} barSize={belowWidth ? 8 : 14} data={todoRateData}>\n        <RadialBar label={{ position: 'insideStart', fill: '#fff' }} background dataKey=\"uv\" />\n        <Legend iconSize={belowWidth ? 0 : 10} width={belowWidth ? 120 : 200} height={belowWidth ? 100 : 140} layout={belowWidth ? \"vertical\" : \"radial\"} verticalAlign={\"top\"} align={ belowWidth ? \"right\" : \"center\"} />\n      </RadialBarChart>\n    </ChartWrapper>\n  )\n};\n\nexport default Chart;\n","import { FC } from \"react\";\nimport { TodoCard } from \"./TodoCard\";\nimport { InputTodo } from \"./InpuTodo\";\nimport { useDispatch } from \"react-redux\";\nimport todoCardActions from \"../store/todo_card/action\";\nimport alertActions from \"../store/alert/action\";\nimport { AlertSeverity } from \"../domain/entity/alert\";\nimport Chart from \"./Chart\";\n\nconst Todo: FC = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Chart />\n      <InputTodo\n        setTodoCardTitle={ (provTitle: string) => {dispatch(todoCardActions.setTodoCardTitle(provTitle))}}\n        addTodoCardList={ (provTitle: string) => {dispatch(todoCardActions.addTodoCardList(provTitle))}}\n        openAlert={ (severity: AlertSeverity, message: string) => {dispatch(alertActions.openAlert({severity, message}))}}\n      />\n      <TodoCard\n        addTodo={ (provTodoText: string, doneFlg: boolean, index: number) => {dispatch(todoCardActions.addTodo({provTodoText, doneFlg, index}))} }\n        setTodoText={ (provTodoText: string, index: number) => {dispatch(todoCardActions.setTodoText({provTodoText, index}))}}\n        setDoneFlg={ (doneFlg: boolean, cardIndex: number, index: number) => {dispatch(todoCardActions.setDoneFlg({doneFlg, cardIndex, index}))}}\n        openAlert={ (severity: AlertSeverity, message: string) => {dispatch(alertActions.openAlert({severity, message}))}}\n        deleteTodoCard={ (cardIndex: number) => {dispatch(todoCardActions.deleteTodoCard({cardIndex}))} }\n        deleteTodo={ (cardIndex: number, todoIndex: number) => {dispatch(todoCardActions.deleteTodo({cardIndex, todoIndex}))} }\n      />\n    </>\n  )\n};\n\nexport default Todo;\n","import { FC } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport styled from 'styled-components';\nimport { uaCheck } from '../domain/service/validation';\nimport Alert from './Alert';\nimport Todo from './Todo';\n\nconst HeaderWrapper = styled.header`\n  width: 100%;\n`;\n\nconst HeaderLogo = styled.h1`\n  margin-left: 16px;\n`;\n\nconst App: FC = () => {\n\n  return (\n    <>\n      <HeaderWrapper>\n        <HeaderLogo>\n          Todo\n        </HeaderLogo>\n      </HeaderWrapper>\n      <DndProvider backend={(uaCheck ? TouchBackend : HTML5Backend)}>\n        <Todo />\n      </DndProvider>\n      <Alert />\n    </>\n  )\n};\n\nexport default App;\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport { Alert } from \"../../domain/entity/alert\";\nimport alertActions from \"./action\";\n\nconst init: Alert = { open: false, message: \"\", severity: \"error\" };\n\nconst alertReducer = reducerWithInitialState(init)\n  .case(\n    alertActions.openAlert,\n    (_state, payload) => ({\n      ...payload,\n      open: true\n    })\n  )\n  .case(\n    alertActions.closeAlert,\n    state => ({\n      ...state,\n      message: \"\",\n      open: false\n    })\n  );\n\nexport default alertReducer;\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport { TodoCard } from \"../../domain/entity/todoCard\";\nimport update from 'immutability-helper';\nimport todoCardActions from \"./action\";\n\nconst init: TodoCard = {\n  provTitle: \"\",\n  todoCardList: [],\n};\n\nconst todoCardReducer = reducerWithInitialState(init)\n  .case(\n    todoCardActions.setTodoCardTitle,\n    (state, payload) => ({\n      ...state,\n      provTitle: payload\n    })\n  )\n  .case(\n    todoCardActions.addTodoCardList,\n    (state, payload) => ({\n      ...state,\n      provTitle: \"\",\n      todoCardList: [...state.todoCardList, {id: state.todoCardList.length + 1, title: payload, provTodoText: \"\", todos: []}]\n    })\n  )\n  .case(\n    todoCardActions.setTodoText,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((t, i) =>\n        i === payload.index ? {...t, provTodoText: payload.provTodoText} : t\n      )\n    })\n  )\n  .case(\n    todoCardActions.addTodo,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((t, i) => \n        i === payload.index ? {...t, provTodoText: \"\", todos: [...t.todos, {id: t.todos.length + 1, todoText: payload.provTodoText, doneFlg: payload.doneFlg}]}: t\n      )\n    })\n  )\n  .case(\n    todoCardActions.setDoneFlg,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((card, i) =>  \n        i === payload.cardIndex ? \n        {...card, todos: [\n          ...card.todos.map((todo, i) => \n          i === payload.index ? {...todo, doneFlg: payload.doneFlg} : todo\n          ) \n        ]} \n        : card\n    )\n    })\n  )\n  .case(\n    todoCardActions.sortTodoCardList,\n    (state, payload) => ({\n      ...state,\n      todoCardList: update(state.todoCardList, \n        {$splice: [ \n          [payload.index, 1], \n          [payload.atIndex, 0, payload.card]\n        ]\n      })\n    })\n  )\n  .case(\n    todoCardActions.deleteTodoCard,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.filter((_, i) => i !== payload.cardIndex)\n    })\n  )\n  .case(\n    todoCardActions.deleteTodo,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((card, i) => (\n        i === payload.cardIndex ?\n        {...card, \n         todos: card.todos.filter((_, i) => i !== payload.todoIndex)\n        } \n        :\n        card\n      ))\n    })\n  );\n\n  export default todoCardReducer;\n","import { createStore, combineReducers, compose, } from \"redux\";\nimport { RootState } from \"../domain/entity/rootState\";\nimport alertReducer from \"./alert/reducer\";\nimport todoCardReducer from \"./todo_card/reducer\";\n\nconst store = createStore(\n  combineReducers<RootState>({\n    todoCard: todoCardReducer,\n    alert: alertReducer\n  }),\n  compose(\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__&&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { FC } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from './components/App'\nimport store from \"./store/store\";\n\nconst GlobalStyle = createGlobalStyle`\n  body * {\n    box-sizing: border-box;\n    font-family: Osaka,\"ＭＳ Ｐゴシック\",\"MS PGothic\",Sans-Serif;\n  }\n`;\n\nexport const Main: FC = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>\n  );\n};\n\nReactDOM.render(\n  <Main />, document.getElementById(\"root\")\n);\n"],"sourceRoot":""}