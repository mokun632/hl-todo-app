{"version":3,"sources":["store/alert/action.ts","components/Alert.tsx","domain/service/validation.ts","dnd/entity/ItemTypes.ts","components/DraggableTodoCard.tsx","store/todo_card/action.ts","dnd/service/dndHandlers.ts","components/TodoCard.tsx","components/InpuTodo.tsx","components/Chart.tsx","components/Todo.tsx","components/App.tsx","store/alert/reducer.ts","store/todo_card/reducer.ts","store/store.ts","index.tsx"],"names":["actionCraeter","actionCreaterFactory","alertActions","openAlert","closeAlert","Alert","alert","useSelector","state","dispatch","useDispatch","Snackbar","open","onClose","elevation","variant","severity","message","emptyMessage","tooLongMessage","maxQtyMessage","isTooLong","str","maxLen","trim","length","ItemTypes","DraggableTodoCard","id","moveCard","findCard","children","originalIndex","index","useDrag","item","type","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","ref","node","style","cursor","todoCardActions","setTodoCardTitle","addTodoCardList","setTodoText","addTodo","setDoneFlg","sortTodoCardList","deleteTodoCard","deleteTodo","findCardHandler","_card","card","todoCardList","filter","c","indexOf","TodoCardsWrapper","styled","div","TodoMainTitle","DeleteTodoCardButton","button","TodoCards","TodoMain","TodoCheckBoxWrapper","DeleteTodoButton","DeleteIcon","TodoCheckBoxLabel","label","TodoText","TextField","TodoCard","todoCard","atIndex","moveCardHandler","belowWidth","useMediaQuery","map","ItodoCard","todoCardIndex","title","onClick","_","fontSize","todos","todo","i","onChange","doneFlg","checked","todoText","size","value","provTodoText","e","target","onKeyPress","key","onBlur","InputTodoWrapper","InputTodoText","input","InputTodoButton","isIME","InputTodo","addTodoCard","provTitle","array","maxQty","isMaxCardQty","onCompositionStart","onCompositionEnd","onKeyDown","match","ChartWrapper","COLORS","Chart","barData","preData","name","completed","Math","floor","t","uncompleted","notMuch","Array","createBarData","todoRateData","doneFlgCount","flat","totalDoneFlgCount","doneFlgRate","otherDoneRate","n","uv","fill","createTodoRateData","BarChart","width","height","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Bar","stackId","RadialBarChart","cx","cy","innerRadius","outerRadius","barSize","RadialBar","position","background","iconSize","layout","verticalAlign","align","Todo","cardIndex","todoIndex","HeaderWrapper","header","HeaderLogo","h1","App","DndProvider","backend","navigator","userAgent","TouchBackend","HTML5Backend","alertReducer","reducerWithInitialState","case","_state","payload","todoCardReducer","update","$splice","store","createStore","combineReducers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","GlobalStyle","createGlobalStyle","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fadce1cd.chunk.js","sourcesContent":["import actionCreaterFactory from \"typescript-fsa\";\nimport { Alert } from \"../../domain/entity/alert\";\n\nconst actionCraeter = actionCreaterFactory();\n\nexport type AlertPayload = Omit<Alert, \"open\">;\n\nconst alertActions = {\n  openAlert: actionCraeter<AlertPayload>(\"OPEN_ALERT\"),\n  closeAlert: actionCraeter<{}>(\"CLOSE_ALERT\")\n};\n\nexport default alertActions;\n","import React, { FC } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { RootState } from \"../domain/entity/rootState\"\nimport alertActions from \"../store/alert/action\";\n\nconst Alert: FC = () => {\n  const alert = useSelector((state: RootState) => state.alert);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(alertActions.closeAlert({}));\n  }\n\n  return (\n    <Snackbar open={alert.open} onClose={handleClose}>\n      <MuiAlert elevation={6} variant=\"filled\" severity={alert.severity}>\n        {alert.message}\n      </MuiAlert>\n    </Snackbar>\n  )\n}\n\nexport default Alert;\n","import { TodoCard } from \"../entity/todoCard\";\n\nexport const maxLen: number = 12;\n\nexport const maxQty: number = 10;\n\nexport const emptyMessage: string = \"タイトルを入力して下さい\";\n\nexport const tooLongMessage: string = `${maxLen}文字以下で入力して下さい`;\n\nexport const maxQtyMessage: string = `カードは${maxQty}枚以上は、作れません`;\n\nexport const isEmpty = (str: string): boolean => !str.trim();\n\nexport const isTooLong = (str: string, maxLen: number): boolean => str.trim().length >= maxLen;\n\nexport const isMaxCardQty = (array: TodoCard[\"todoCardList\"], maxQty: number): boolean => array.length >= maxQty;\n","export const ItemTypes = {\n  CARD: \"card\",\n  TODO: \"todo\"\n}\ntype ItemType = keyof typeof ItemTypes;\n\nexport type Item = {\n  index: number;\n  id: number;\n  type: ItemType;\n};\n","import { FC } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../dnd/entity/ItemTypes\";\nimport { Card, Todo } from \"../domain/entity/todoCard\";\n\ntype Props = {\n  id: string,\n  card: Card | Todo,\n  moveCard: (id: string, to: number) => void,\n  findCard: (id: string) => { index: number },\n}\n\ninterface Item {\n  id: string\n  type: string\n  originalIndex: string\n}\n\nconst DraggableTodoCard: FC<Props> = ({\n  id, moveCard, findCard, children\n}) => {\n\n  const originalIndex = findCard(id).index\n  const [, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, originalIndex },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const { id: droppedId, originalIndex } = monitor.getItem()\n      const didDrop = monitor.didDrop()\n      if (!didDrop) {\n        moveCard(droppedId, originalIndex)\n      }\n    },\n  });\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    canDrop: () => false,\n    hover({ id: draggedId }: Item) {\n      if (draggedId !== id) {\n        const { index: overIndex } = findCard(id)\n        moveCard(draggedId, overIndex)\n      }\n    },\n  })\n\n  return (\n    <div ref={(node) => drag(drop(node))} style={{cursor: 'move'}}>\n      {children}\n    </div>\n  )\n\n}\n\nexport default DraggableTodoCard;\n","import actionCreaterFactory from \"typescript-fsa\";\nimport { Card } from \"../../domain/entity/todoCard\";\n\nconst actionCraeter = actionCreaterFactory();\n\nconst todoCardActions = {\n  setTodoCardTitle: actionCraeter<string>(\"SET_TODO_CARD_TITLE\"),\n  addTodoCardList: actionCraeter<string>(\"ADD_TODO_CARD_LIST\"),\n  setTodoText: actionCraeter<{provTodoText: string, index: number}>(\"SET_TODO_TEXT\"),\n  addTodo: actionCraeter<{provTodoText: string, doneFlg: boolean, index: number}>(\"ADD_TODOS\"),\n  setDoneFlg: actionCraeter<{doneFlg: boolean, cardIndex: number, index: number}>(\"SET_DONE_FLG\"),\n  sortTodoCardList: actionCraeter<{card: Card, index: number, atIndex: number}>(\"SORT_TODO_CARD_LIST\"),\n  deleteTodoCard: actionCraeter<{cardIndex: number}>(\"DELETE_TODO_CARD\"),\n  deleteTodo: actionCraeter<{cardIndex: number, todoIndex: number}>(\"DELETE_TODO\"),\n};\n\nexport default todoCardActions;\n","import { TodoCard } from \"../../domain/entity/todoCard\";\nimport todoCardActions from \"../../store/todo_card/action\";\n\nexport const moveCardHandler = (id: string, atIndex: number, _card: TodoCard) => {\n  const { card, index } = findCardHandler(id, _card)\n  return todoCardActions.sortTodoCardList({card, index, atIndex});\n}\n\nexport const findCardHandler = (id: string, _card: TodoCard) => {\n  const card = _card.todoCardList.filter((c) => `${c.id}` === id)[0]\n  return {\n    card,\n    index: _card.todoCardList.indexOf(card),\n  }\n};\n","import { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { TextField, useMediaQuery } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { AlertSeverity } from '../domain/entity/alert';\nimport { RootState } from '../domain/entity/rootState';\nimport { isTooLong, maxLen, tooLongMessage } from '../domain/service/validation';\nimport DraggableTodoCard from './DraggableTodoCard';\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../dnd/entity/ItemTypes';\nimport { moveCardHandler, findCardHandler } from '../dnd/service/dndHandlers';\n\nconst TodoCardsWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 300px 1fr;\n  grid-template-columns: 240px 240px 240px 240px 240px;\n  grid-gap: 16px;\n  align-items: center;\n  justify-content: center;\n  margin: 0 70px;\n\n  @media (max-width: 500px) {\n    grid-template-rows: 180px 180px 180px 180px 180px;\n    grid-template-columns: 130px 130px;\n    grid-gap: 8px;\n    margin: 0 30px;\n  }\n  ::before {\n    transition: all 1.5s;\n    opacity: 1;\n  }\n`;\n\nconst TodoMainTitle = styled.div`\n  position: absolute;\n  height: 20px;\n  width: 90%;\n  top: 1px;\n  font-size: 15px;\n  text-align: center;\n  white-space:　nowrap;\n  overflow: scroll;\n\n  @media (max-width: 500px) {\n    font-size: 12px;\n  }\n`;\n\nconst DeleteTodoCardButton = styled.button`\n  position: absolute;\n  top: -10px;\n  right: -5px;\n  transition: 0.1s;\n  background: #ebebeb;\n  border: 2px solid #33322E;\n  box-sizing: border-box;\n  font-size: 5px;\n  border-radius: 17px;\n  box-shadow: 1px 1px 0px;\n  outline: none;\n\n  :active {\n    transform: translate(1px, 1px);\n    box-shadow: none;\n  };\n`;\n\nconst TodoCards = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 220px;\n  height: 300px;\n  margin-top: 15px;\n  border: 4px solid #33322E;\n  box-sizing: border-box;\n  box-shadow: 12px 12px 0px #33322E;\n  background: #F9F3E5;\n  border-radius: 24px;\n\n  @media (max-width: 500px) {\n    width: 130px;\n    height: 180px;\n    margin-top: 2px;\n  }\n`;\n\nconst TodoMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 80%;\n  width: 100%;\n  border-top: 1.5px solid #33322E;\n  box-sizing: border-box;\n`;\n\nconst TodoCheckBoxWrapper = styled.div`\n  position: relative;\n  display: table-cell;\n  margin: 8px 0;\n  @media (max-width: 500px) {\n    margin: 0;\n  }\n`;\n\nconst DeleteTodoButton = styled(DeleteIcon)`\n  position: absolute;\n  top: -1px;\n  right: 0px;\n  transition: 0.1s;\n\n  @media (max-width: 500px) {\n    position: absolute;\n    top: 0;\n    right: 2px;\n  }\n\n  :active {\n    transform: translate(1px, 1px);\n    box-shadow: none;\n  };\n`;\n\nconst TodoCheckBoxLabel = styled.label`\n  width: 100%;\n\n  @media (max-width: 500px) {\n    font-size: 15px;\n  }\n`;\n\nconst TodoText = styled(TextField)`\n  margin: 0;\n  width: 100%;\n`;\n\ntype Props = {\n  addTodo: (provTodoText: string, doneFlg: boolean, index: number) => void;\n  setTodoText: (provTodoText: string, index: number) => void;\n  setDoneFlg: (doneFlg: boolean, cardIndex: number, index: number) => void;\n  openAlert: (severity: AlertSeverity, message: string) => void;\n  deleteTodoCard: (cardIndex: number) => void;\n  deleteTodo: (cardIndex: number, todoIndex: number) => void;\n}\n\nexport const TodoCard: FC<Props> = (\n  {\n    addTodo = () => undefined,\n    setTodoText = () => undefined,\n    setDoneFlg = () => undefined,\n    openAlert = () => undefined,\n    deleteTodoCard = () => undefined,\n    deleteTodo = () => undefined,\n  }\n) => {\n  const todoCard = useSelector((state: RootState) => state.todoCard);\n  const dispatch = useDispatch();\n  const moveCard = (id: string, atIndex: number) => { dispatch(moveCardHandler(id, atIndex, todoCard )) };\n  const findCard = (id: string) => { \n    const card = findCardHandler(id, todoCard);\n    return { index: card.index }\n  };\n  const belowWidth = useMediaQuery('(max-width: 500px)')\n\n  const [, drop] = useDrop({ accept: ItemTypes.CARD })\n\n  return (\n    <TodoCardsWrapper ref={drop}>\n      {todoCard.todoCardList.length > 0 && \n      (\n        todoCard.todoCardList.map((ItodoCard, todoCardIndex) => (\n        <DraggableTodoCard key={todoCardIndex} id={`${ItodoCard.id}`} card={ItodoCard} moveCard={moveCard} findCard={findCard}>\n          <TodoCards>\n           <TodoMainTitle >\n             {ItodoCard.title}\n           </TodoMainTitle>\n           <DeleteTodoCardButton onClick={_ => deleteTodoCard(todoCardIndex)}>\n              <DeleteIcon style={belowWidth ? {fontSize: 17} : {fontSize: 20}} />\n           </DeleteTodoCardButton>\n            <TodoMain>\n             {ItodoCard.todos.map((todo, i) => (\n               <TodoCheckBoxWrapper key={i}>\n                 <input \n                   type=\"checkbox\"\n                   onChange={_ => setDoneFlg( todo.doneFlg? false : true, todoCardIndex, i)}\n                   checked={todo.doneFlg}\n                 />\n                 <TodoCheckBoxLabel>\n                   {todo.doneFlg? \n                   <del>\n                     {todo.todoText}\n                   </del>\n                   :\n                   todo.todoText}\n                 </TodoCheckBoxLabel>\n                 <DeleteTodoButton style={belowWidth ? {fontSize: 17} : {fontSize: 20}} onClick={_ => deleteTodo(todoCardIndex, i)} />\n               </TodoCheckBoxWrapper>\n               )\n              )\n             }\n             {\n               ItodoCard.todos.length < 6 &&\n               (  \n                 <TodoCheckBoxWrapper>\n                   <TodoText\n                     size=\"medium\"\n                     value={todoCard.todoCardList[todoCardIndex].provTodoText}\n                     onChange={e => {\n                       isTooLong(e.target.value, maxLen)?\n                       openAlert(\"error\", tooLongMessage)\n                       :\n                       setTodoText(e.target.value, todoCardIndex)\n                     }}\n                     onKeyPress={e => {\n                       e.key === \"Enter\" && \n                       !!todoCard.todoCardList[todoCardIndex].provTodoText &&\n                       addTodo(todoCard.todoCardList[todoCardIndex].provTodoText, false, todoCardIndex)\n                     }} \n                     onBlur={_ => {\n                       !!todoCard.todoCardList[todoCardIndex].provTodoText && \n                       addTodo(todoCard.todoCardList[todoCardIndex].provTodoText, false, todoCardIndex)\n                     }}\n                   />\n                 </TodoCheckBoxWrapper>\n               )\n             }\n            </TodoMain>\n          </TodoCards>\n        </DraggableTodoCard>\n       ))\n      )\n      }\n    </TodoCardsWrapper>\n  )\n};\n","import { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { AlertSeverity } from '../domain/entity/alert';\nimport { RootState } from '../domain/entity/rootState';\nimport { TodoCard } from '../domain/entity/todoCard';\nimport { emptyMessage, isEmpty, isTooLong, maxLen, tooLongMessage, isMaxCardQty, maxQty, maxQtyMessage } from '../domain/service/validation';\n\nconst InputTodoWrapper = styled.div`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  height: 30px;\n\n  @media (max-width: 500px) {\n    margin-top: 80px;\n  }\n`;\n\nconst InputTodoText = styled.input`\n  vertical-align: middle;\n  border: 2px solid #33322E;\n  border-radius: 4px;\n  width: 35%;\n  height: 26px;\n  outline: none;\n`;\n\nconst InputTodoButton = styled.button`\n  transition: 0.1s;\n  vertical-align: middle;\n  background: #D0F4F0;\n  border: 2px solid #33322E;\n  box-sizing: border-box;\n  font-size: 14px;\n  border-radius: 4px;\n  box-shadow: 3px 3px 0px;\n  outline: none;\n\n  :active {\n    transform: translate(1px, 1px);\n    box-shadow: none;\n  };\n`;\n\ntype Props= {\n  setTodoCardTitle: (provTitle: string) => void;\n  addTodoCardList: (provTitlele: string) => void;\n  openAlert: (severity: AlertSeverity, message: string) => void;\n}\n\nlet isIME: boolean = false;\n\nexport const InputTodo: FC<Props> = (\n  {\n    setTodoCardTitle = () => undefined,\n    addTodoCardList = () => undefined,\n    openAlert = () => undefined,\n  }\n) => {\n  const todoCard = useSelector((state: RootState) => state.todoCard);\n\n  const addTodoCard = (provTitle: string, todoCardList: TodoCard[\"todoCardList\"]) => {\n    isEmpty(provTitle) ?\n    openAlert(\"error\", emptyMessage)\n    :\n    isTooLong(provTitle, maxLen) ?\n    openAlert(\"error\", emptyMessage)\n    :\n    isMaxCardQty(todoCardList, maxQty)?\n    openAlert(\"error\", maxQtyMessage)\n    :\n    addTodoCardList(provTitle)\n  };\n\n  const setTitle = (provTitle: string) => {\n    isTooLong(provTitle, maxLen) ?\n    openAlert(\"error\", tooLongMessage)\n    :\n    setTodoCardTitle(provTitle);\n  };\n\n  return (\n    <>\n      <InputTodoWrapper>\n        <InputTodoText\n          value={todoCard.provTitle}\n          onCompositionStart={e => {\n            isIME = false;\n          }}\n          onCompositionEnd={e => {\n            isIME = true;\n          }}\n          onChange={e => setTitle(e.target.value)}\n          onKeyDown={e => (isIME || todoCard.provTitle.match(/^[A-Za-z0-9]*$/)) && \n                          e.key === \"Enter\" && \n                          addTodoCard(todoCard.provTitle, todoCard.todoCardList)}\n        />\n        <InputTodoButton\n          onClick={_ => addTodoCard(todoCard.provTitle, todoCard.todoCardList)}\n        >\n          Create Card\n        </InputTodoButton>\n      </InputTodoWrapper>\n    </>\n  )\n}\n","import { useMediaQuery } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, RadialBarChart, RadialBar\n} from 'recharts';\nimport styled from \"styled-components\";\nimport { RootState } from \"../domain/entity/rootState\";\nimport { TodoCard } from \"../domain/entity/todoCard\";\n\nconst ChartWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr;\n  grid-gap: 10px;\n  align-items: center;\n  justify-content: center;\n  margin: 0 70px;\n\n  @media (max-width: 500px) {\n    grid-template-columns: 1fr;\n    grid-gap: 3px;\n    margin: 0 30px;\n  }\n`;\n\ntype BarChartType = { name: string, uncompleted: number, completed: number, }[];\n\ntype TodoRateType = { name: string, uv: number, fill: string }[];\n\nconst COLORS = [ '#00ffea', '#b600fe', '#00C49F', '#FFBB28', '#00a2ff', '#ff0000', '#27a700', '#fffb00', '#fe00dc', '#000294' ];\n\nconst Chart: FC = () => {\n  const todoCard = useSelector((state: RootState) => state.todoCard);\n  const belowWidth = useMediaQuery('(max-width: 500px)')\n  const createBarData = (todoCard: TodoCard) => {\n    const preData = todoCard.todoCardList.map((todo, _) => {\n      return{\n        name: todo.title,\n        completed: !todo.todos.length ? 0 : Math.floor(todo.todos.filter((t) => t.doneFlg).length / 6 * 100),\n        uncompleted: !todo.todos.length ? 0 : Math.floor(todo.todos.filter((t) => !t.doneFlg).length / 6 * 100),\n      };\n    });\n    const notMuch = 10 - preData.length;\n    return !notMuch ? preData : [...preData, ...[...Array(notMuch)].map(() => { return{ name: \"\", uncompleted: 0, completed: 0, } })]\n\n  };\n\n  let barData: BarChartType = createBarData(todoCard);\n\n  const createTodoRateData = (todoCard: TodoCard) => {\n    const doneFlgCount = todoCard.todoCardList.map((c, _) => {\n     return c.todos.filter((t, _) => t.doneFlg)\n    }\n    ).flat().length;\n    const totalDoneFlgCount = todoCard.todoCardList.map((c, _) => \n      c.todos\n    ).flat().length;\n    const doneFlgRate = Math.floor(doneFlgCount / totalDoneFlgCount * 100);\n    const otherDoneRate = \n      todoCard.todoCardList.map((c, i) => {\n      const n = Math.floor(c.todos.filter((t, _) => t.doneFlg).length / c.todos.length * 100);\n      return {\n        name: c.title,\n        uv: !n ? 0 : n,\n        fill: `${COLORS[i % COLORS.length]}`\n      }\n    })\n    return [{name: \"\", uv: 100, fill: \"#ffffff\"}, {name: \"全体完了率\", uv: !doneFlgRate ? 0 : doneFlgRate, fill: \"#00ff68\"}, ...otherDoneRate]\n  };\n\n  let todoRateData: TodoRateType = createTodoRateData(todoCard);\n\n  return (\n    <ChartWrapper>\n      <BarChart\n        width={belowWidth ? 400 : 500}\n        height={300}\n        data={barData}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis type=\"number\" domain={[0, 100]} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"completed\" stackId=\"a\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"uncompleted\" stackId=\"a\" fill=\"#8884d8\" />\n      </BarChart>\n      <RadialBarChart width={belowWidth ? 400 : 500} height={belowWidth ? 200 : 300} cx={belowWidth ? 150 : 350} cy={belowWidth ? 100 : 150} innerRadius={belowWidth ? 15 : 30} outerRadius={belowWidth ? 100 : 150} barSize={belowWidth ? 8 : 14} data={todoRateData}>\n        <RadialBar label={{ position: 'insideStart', fill: '#fff' }} background dataKey=\"uv\" />\n        <Legend iconSize={belowWidth ? 0 : 10} width={belowWidth ? 120 : 200} height={belowWidth ? 100 : 140} layout={belowWidth ? \"vertical\" : \"radial\"} verticalAlign={\"top\"} align={ belowWidth ? \"right\" : \"center\"} />\n      </RadialBarChart>\n    </ChartWrapper>\n  )\n};\n\nexport default Chart;\n","import { FC } from \"react\";\nimport { TodoCard } from \"./TodoCard\";\nimport { InputTodo } from \"./InpuTodo\";\nimport { useDispatch } from \"react-redux\";\nimport todoCardActions from \"../store/todo_card/action\";\nimport alertActions from \"../store/alert/action\";\nimport { AlertSeverity } from \"../domain/entity/alert\";\nimport Chart from \"./Chart\";\n\nconst Todo: FC = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Chart />\n      <InputTodo\n        setTodoCardTitle={ (provTitle: string) => {dispatch(todoCardActions.setTodoCardTitle(provTitle))}}\n        addTodoCardList={ (provTitle: string) => {dispatch(todoCardActions.addTodoCardList(provTitle))}}\n        openAlert={ (severity: AlertSeverity, message: string) => {dispatch(alertActions.openAlert({severity, message}))}}\n      />\n      <TodoCard\n        addTodo={ (provTodoText: string, doneFlg: boolean, index: number) => {dispatch(todoCardActions.addTodo({provTodoText, doneFlg, index}))} }\n        setTodoText={ (provTodoText: string, index: number) => {dispatch(todoCardActions.setTodoText({provTodoText, index}))}}\n        setDoneFlg={ (doneFlg: boolean, cardIndex: number, index: number) => {dispatch(todoCardActions.setDoneFlg({doneFlg, cardIndex, index}))}}\n        openAlert={ (severity: AlertSeverity, message: string) => {dispatch(alertActions.openAlert({severity, message}))}}\n        deleteTodoCard={ (cardIndex: number) => {dispatch(todoCardActions.deleteTodoCard({cardIndex}))} }\n        deleteTodo={ (cardIndex: number, todoIndex: number) => {dispatch(todoCardActions.deleteTodo({cardIndex, todoIndex}))} }\n      />\n    </>\n  )\n};\n\nexport default Todo;\n","import { FC } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport styled from 'styled-components';\nimport Alert from './Alert';\nimport Todo from './Todo';\n\nconst HeaderWrapper = styled.header`\n  width: 100%;\n`;\n\nconst HeaderLogo = styled.h1`\n  margin-left: 16px;\n`;\n\nconst App: FC = () => {\n\n  return (\n    <>\n      <HeaderWrapper>\n        <HeaderLogo>\n          Todo\n        </HeaderLogo>\n      </HeaderWrapper>\n      <DndProvider backend={(navigator.userAgent.match(/iPhone|Android.+Mobile/) ? TouchBackend : HTML5Backend)}>\n        <Todo />\n      </DndProvider>\n      <Alert />\n    </>\n  )\n};\n\nexport default App;\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport { Alert } from \"../../domain/entity/alert\";\nimport alertActions from \"./action\";\n\nconst init: Alert = { open: false, message: \"\", severity: \"error\" };\n\nconst alertReducer = reducerWithInitialState(init)\n  .case(\n    alertActions.openAlert,\n    (_state, payload) => ({\n      ...payload,\n      open: true\n    })\n  )\n  .case(\n    alertActions.closeAlert,\n    state => ({\n      ...state,\n      message: \"\",\n      open: false\n    })\n  );\n\nexport default alertReducer;\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport { TodoCard } from \"../../domain/entity/todoCard\";\nimport update from 'immutability-helper';\nimport todoCardActions from \"./action\";\n\nconst init: TodoCard = {\n  provTitle: \"\",\n  todoCardList: [],\n};\n\nconst todoCardReducer = reducerWithInitialState(init)\n  .case(\n    todoCardActions.setTodoCardTitle,\n    (state, payload) => ({\n      ...state,\n      provTitle: payload\n    })\n  )\n  .case(\n    todoCardActions.addTodoCardList,\n    (state, payload) => ({\n      ...state,\n      provTitle: \"\",\n      todoCardList: [...state.todoCardList, {id: state.todoCardList.length + 1, title: payload, provTodoText: \"\", todos: []}]\n    })\n  )\n  .case(\n    todoCardActions.setTodoText,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((t, i) =>\n        i === payload.index ? {...t, provTodoText: payload.provTodoText} : t\n      )\n    })\n  )\n  .case(\n    todoCardActions.addTodo,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((t, i) => \n        i === payload.index ? {...t, provTodoText: \"\", todos: [...t.todos, {id: t.todos.length + 1, todoText: payload.provTodoText, doneFlg: payload.doneFlg}]}: t\n      )\n    })\n  )\n  .case(\n    todoCardActions.setDoneFlg,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((card, i) =>  \n        i === payload.cardIndex ? \n        {...card, todos: [\n          ...card.todos.map((todo, i) => \n          i === payload.index ? {...todo, doneFlg: payload.doneFlg} : todo\n          ) \n        ]} \n        : card\n    )\n    })\n  )\n  .case(\n    todoCardActions.sortTodoCardList,\n    (state, payload) => ({\n      ...state,\n      todoCardList: update(state.todoCardList, \n        {$splice: [ \n          [payload.index, 1], \n          [payload.atIndex, 0, payload.card]\n        ]\n      })\n    })\n  )\n  .case(\n    todoCardActions.deleteTodoCard,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.filter((_, i) => i !== payload.cardIndex)\n    })\n  )\n  .case(\n    todoCardActions.deleteTodo,\n    (state, payload) => ({\n      ...state,\n      todoCardList: state.todoCardList.map((card, i) => (\n        i === payload.cardIndex ?\n        {...card, \n         todos: card.todos.filter((_, i) => i !== payload.todoIndex)\n        } \n        :\n        card\n      ))\n    })\n  );\n\n  export default todoCardReducer;\n","import { createStore, combineReducers, compose, } from \"redux\";\nimport { RootState } from \"../domain/entity/rootState\";\nimport alertReducer from \"./alert/reducer\";\nimport todoCardReducer from \"./todo_card/reducer\";\n\nconst store = createStore(\n  combineReducers<RootState>({\n    todoCard: todoCardReducer,\n    alert: alertReducer\n  }),\n  compose(\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__&&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { FC } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from './components/App'\nimport store from \"./store/store\";\n\nconst GlobalStyle = createGlobalStyle`\n  body * {\n    box-sizing: border-box;\n    font-family: Osaka,\"ＭＳ Ｐゴシック\",\"MS PGothic\",Sans-Serif;\n  }\n`;\n\nexport const Main: FC = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>\n  );\n};\n\nReactDOM.render(\n  <Main />, document.getElementById(\"root\")\n);\n"],"sourceRoot":""}